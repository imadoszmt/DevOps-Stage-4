version: '3'

services:
  # Redis Queue
  redis-queue:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network
    volumes:
      - redis_data:/data

  # Frontend Service
  frontend:
    build: ./frontend
    depends_on:
      - auth-api
      - todos-api
      - users-api
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - AUTH_API_ADDRESS=http://auth-api:8081
      - TODOS_API_ADDRESS=http://todos-api:8082
    networks:
      - app-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

  # Auth API Service
  auth-api:
    build: ./auth-api
    environment:
      - AUTH_API_PORT=8081
      - JWT_SECRET=myfancysecret
      - USERS_API_ADDRESS=http://users-api:8083
    ports:
      - "8081:8081"
    depends_on:
      - users-api
    networks:
      - app-network

  # Todos API Service
  todos-api:
    build: ./todos-api
    environment:
      - TODOS_API_PORT=8082  # Changed from TODO_API_PORT
      - JWT_SECRET=myfancysecret
      - REDIS_HOST=redis-queue
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    ports:
      - "8082:8082"
    depends_on:
      - redis-queue
    networks:
      - app-network

  # Users API Service
  users-api:
    build: ./users-api
    environment:
      - SERVER_PORT=8083
      - JWT_SECRET=myfancysecret
    ports:
      - "8083:8083"
    networks:
      - app-network

  # Log Message Processor
  log-processor:
    build: ./log-message-processor
    environment:
      - REDIS_HOST=redis-queue
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
    depends_on:
      - redis-queue
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis_data: